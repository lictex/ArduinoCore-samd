name: release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"

jobs:
  core-pre-release-from-tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout ArduinoCore-API
        uses: actions/checkout@v2
        with:
          repository: arduino/ArduinoCore-API
          path: extras/ArduinoCore-API

      - name: Check if API should be compiled in the core
        id: checkapi
        run: |
          if [[ $(grep -r api platform.txt) ]]; then echo "::set-output name=IS_API::true"; fi

      - name: Checkout latest tag of ArduinoCore-API and add it to the core
        run: |
          cd extras/ArduinoCore-API
          git fetch --tags
          git checkout $(git describe --tags $(git rev-list --tags --max-count=1))
          cd ../..
          mv "$GITHUB_WORKSPACE/extras/ArduinoCore-API/api" "$GITHUB_WORKSPACE/cores/arduino"
        if: steps.checkapi.outputs.IS_API == 'true'

      - name: Remove ArduinoCore-API
        run: rm -r "$GITHUB_WORKSPACE/extras/ArduinoCore-API"

      - name: Set env
        run: echo "TAG_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get repo name
        run: echo "REPOSITORY_NAME=$(echo ${{ github.repository }} | cut -d "/" -f2-)" >> $GITHUB_ENV

      - name: Package the new core
        run: |
          extras/pack.release.bash $TAG_VERSION $REPOSITORY_NAME
          cd extras
          mkdir staging
          echo $PWD
          mv ../*.json staging/
          mv ../*.tar.bz2 staging/
          cd ..

      - name: Get architecture name
        run: |
          echo "ARCHITECTURE=$(cat extras/package_index.json.NewTag.template | jq ".packages[0].platforms[0].architecture" | sed 's/\"//g')" >> $GITHUB_ENV

      - name: Upload package_*_index.json and *.tar.bz2 file to Arduino downloads servers
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }} # or https://github.com/aws/aws-cli/issues/5623
        run: |
          aws s3 sync extras/staging/ s3://${{ secrets.ARDUINO_DOWNLOADS_BUCKET }}/packages/staging/ --exclude "*" --include *.json
          aws s3 sync extras/staging/ s3://${{ secrets.ARDUINO_DOWNLOADS_BUCKET }}/cores/staging/ --exclude "*" --include *.tar.bz2
